@model GameOdd

 <div class="container border border-info rounded" id="GameOddContainer">
     <div class="d-flex flex-row justify-content-evenly align-items-center p-2">
        <p class="font-weight-bold"">@DateTime.Parse(Model.commence_time).ToString("MM/dd hh:mm")</p>
        <div class="container" id="game-odd-@Model.id">
            <div class="row align-items-center font-weight-bold d-flex flex-nowrap pb-2" id="odd-header">
                <div class="col">
                    <p>Team</p>
                </div>
                <div class="col">
                    <p>Money</p>
                </div>
                <div class="col">
                    <p>Spreads</p>
                </div>
                <div class="col">
                    <p>Totals</p>
                </div>
            </div>
            <div class="row align-items-center justify-content-evenly d-flex flex-nowrap pb-2" id="away-team">
                <div class="col">
                    <p>@Model.away_team</p>
                </div>
                @foreach(Odd o_tmp in Model.odds)
                {
                    BetButtonData tmp_a = new BetButtonData();
                    BetData tmp_away = new BetData();
                    tmp_away.bet_type = o_tmp.bet_type;
                    tmp_away.game_id = Model.id;
                    tmp_away.name = Model.away_team;
                    Outcome tmp_outcome = new Outcome();
                    
                    bool isOver = false;
                    if (tmp_away.bet_type.Equals("totals", StringComparison.OrdinalIgnoreCase))
                    {
                        tmp_outcome = o_tmp.outcomes.FirstOrDefault(m => m.name.Equals("Over", StringComparison.OrdinalIgnoreCase));
                        isOver = true;
                        tmp_away.name = "Over";
                    }
                    else
                    {
                        tmp_outcome = o_tmp.outcomes.FirstOrDefault(m => m.name.Equals(Model.away_team, StringComparison.OrdinalIgnoreCase));

                    }


                    if (tmp_outcome != null)
                    {
                        tmp_away.price = tmp_outcome.decimal_odd;
                        if (tmp_outcome.point != null)
                        {
                            tmp_away.point = tmp_outcome.point;
                        }

                    }

                    tmp_a.data = tmp_away;
                    tmp_a.isOver = isOver;

                    <div class="col">
                        @{
                            Html.RenderPartial("_BetButton", tmp_a);
                        }
                    </div>
                }
                <div class="col">
        
                </div>
            </div>
            <div class="row align-items-center justify-content-evenly d-flex flex-nowrap pt-2 pb-2" id="home-team">
                <div class="col">
                    <p>@Model.home_team</p>
                </div>
                @foreach (Odd o_tmp in Model.odds)
                {
                    BetButtonData tmp_h = new BetButtonData();
                    BetData tmp_home = new BetData();
                    tmp_home.bet_type = o_tmp.bet_type;
                    tmp_home.game_id = Model.id;
                    tmp_home.name = Model.home_team;
                    Outcome tmp_outcome = new Outcome();
    
                    if (tmp_home.bet_type.Equals("totals", StringComparison.OrdinalIgnoreCase))
                    {
                        tmp_outcome = o_tmp.outcomes.FirstOrDefault(m => m.name.Equals("Under", StringComparison.OrdinalIgnoreCase));
                        tmp_home.name = "Under";
                    }
                    else
                    {
                        tmp_outcome = o_tmp.outcomes.FirstOrDefault(m => m.name.Equals(Model.home_team, StringComparison.OrdinalIgnoreCase));

                    }

                    if (tmp_outcome != null)
                    {
                        tmp_home.price = tmp_outcome.decimal_odd;
                        if (tmp_outcome.point != null)
                        {
                            tmp_home.point = tmp_outcome.point;
                        }

                    }

                    tmp_h.data = tmp_home;
                    tmp_h.isOver = false;

                    <div class="col">
                        @{
                            Html.RenderPartial("_BetButton", tmp_h);
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>